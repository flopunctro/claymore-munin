#!/bin/bash

# -*- sh -*-

: << =cut

=head1 NAME

miner_ - Wildcard plugin to monitor claymore miner stats

=head1 CONFIGURATION

This plugin requires no configuration.

=head1 AUTHOR

Florin Popovici, inspired by the if_ plugin

=head1 LICENSE

Dont really care at this time. GPL, freeware, whatever.

=head1 MAGIC MARKERS

 #%# family=auto
 #%# capabilities=autoconf suggest

=cut

MINERHOST=${0##*miner_}

if [[ -z "$MINERHOST" ]]; then
    echo "This script must be called via a symlink with hostname appended to its name, e.g. 'miner_hostname'"
    exit 1
fi

pollsuccessful=""
# the following script should populate our variables
eval $(/home/claymore-munin/minerpoll.sh $MINERHOST graph)
retcode=$?

[[ "$retcode" -ne 0 ]] && exit $retcode

function print_config {
	echo "multigraph uptime_$MINERHOST
graph_title $MINERHOST Uptime (hours)
graph_category mining
graph_vlabel hrs
graph_args -l 0
uptime_$MINERHOST.label Hours
uptime_$MINERHOST.min 0
uptime_$MINERHOST.info Uptime in hours
multigraph totalhashrate_$MINERHOST
graph_title $MINERHOST Total Hashrate
graph_category mining
graph_vlabel H/s
graph_args -l 0 --base 1000 --units-exponent 6
totalhr_$MINERHOST.label Hashrate
totalhr_$MINERHOST.min 0
totalhr_$MINERHOST.info Total Hashrate
multigraph gpuhashrate_$MINERHOST
graph_title $MINERHOST GPU Hashrates
graph_category mining
graph_vlabel H/s
graph_args -l 0 --base 1000 --units-exponent 6
graph_info Individual GPU hashrates"
    for (( i=0; i<$gpu_no; i++ )); do
	echo "gpuhr_${MINERHOST}_$i.label GPU$i"
    done
    echo "multigraph_$MINERHOST gputemp
graph_title $MINERHOST GPU temperatures
graph_category mining
graph_vlabel deg C
graph_args -l 0
graph_info Individual GPU temperatures"
    for (( i=0; i<$gpu_no; i++ )); do
	echo "gputemp_${MINERHOST}_$i.label GPU$i"
	echo "gputemp_${MINERHOST}_$i.min 0"
	echo "gputemp_${MINERHOST}_$i.max 100"
    done
    echo "multigraph gpufan_${MINERHOST}
graph_title $MINERHOST GPU fan speeds
graph_category mining
graph_vlabel %
graph_args -l 0
graph_info Individual GPU fan speeds"
    for (( i=0; i<$gpu_no; i++ )); do
	echo "gpufan_${MINERHOST}_$i.label GPU$i"
	echo "gpufan_${MINERHOST}_$i.min 0"
	echo "gpufan_${MINERHOST}_$i.max 100"
    done
}

function print_values {
    echo "multigraph uptime_${MINERHOST}
uptime_${MINERHOST}.value $uptime
multigraph totalhashrate_${MINERHOST}
totalhr_${MINERHOST}.value $total_hr
multigraph gpuhashrate_${MINERHOST}"
    for (( i=0; i<$gpu_no; i++ )); do
	echo "gpuhr_${MINERHOST}_$i.value ${gpu_hr[$i]}"
    done
    echo "multigraph gputemp_${MINERHOST}"
    for (( i=0; i<$gpu_no; i++ )); do
	echo "gputemp_${MINERHOST}_$i.value ${gpu_temp[$i]}"
    done
    echo "multigraph gpufan_${MINERHOST}"
    for (( i=0; i<$gpu_no; i++ )); do
	echo "gpufan_${MINERHOST}_$i.value ${gpu_fan[$i]}"
    done
}

case $1 in
    autoconf)
	echo yes
	exit 0
	;;
    suggest)
	# tbd
	exit 0
	;;
    config)
	print_config
	exit 0
	;;
    *)
	print_values
	exit 0
	;;
esac


